# Iniciar repositório
git init

# Ver quais arquivos estão incluidos e foram atualizados
git status

# Ver quais branchs estão disponivel no momento
git branch
git branch staging

# Alterar branch

git checkout staging

# Criar uma branch dentro da branch principal
git checkout -b master

# Adicionar arquivo ao commit
git add "nome do codigo"

# Adicionar todos os arquivos(alteração do arquivo)
git add .

# Criar a primeira versão commit
git commit -m "commit inicial"

# Acessar o github
git config --global user.email ""
git config --global user.name ""

# Pegar o link do github
git remote add origin + https://github.com/darkid28/Meus-projetos

# Mandar para o branch (Branch são os versionamentos do código)
git push --set-upstream origin master

# Mandar para o github
git push

# Ver versões anteriores
git reflog

# Voltar versões anteriores
git reset --hard id

# Mesclar repositórios/históricos diferentes
git pull origin master --allow-unrelated-histories

# Substituição do repositório no github/sobrescrever o remoto
git push origin master --force

# Baixar mudanças do repositório remoto
git fetch origin

# Mesclar atualizações e mudar branchs
git merge

# Remover branch~
git branch -d



## Primeiro fazer o git pull depois o git merge


1 - Git pull da branch principal
2 - gerar uma nova branch a partir da branch principal
3 - Trabalhar e adicionar novas funcionalidas na nova branch que criou
4 - Finalizar o trabalho na branch temporária
5-  git checkout na branch principal
6 - git pulll
7 - Mergiar(unir) o código da branch temporário com a branch principal(depois de testar)
8 - git push da branch principal